name: Build
on: [push, pull_request]
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          sudo apt-get update -y && sudo apt-get install libeigen3-dev pybind11-dev cmake gfortran
          cmake -DCMAKE_INSTALL_PREFIX=~/.local -DHODLR_FORTRAN=ON -DCMAKE_CXX_FLAGS='-Wall -Wextra -pedantic' .
          make install -j4
          ctest --output-on-failure

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          brew install pybind11 eigen
          mkdir build && pushd build
          cmake -DCMAKE_INSTALL_PREFIX=~/.local ..
          make install -j3
          ctest --output-on-failure -E example_conducting_sphere_plate

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
      - name: Install
        shell: cmd
        run: |
          conda install -y cmake ninja pybind11 eigen 
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        shell: cmd
        run: |
          set "LIB=C:\Users\runneradmin\miniconda3\Library\lib;%LIB%"
          set "INCLUDE=C:\Users\runneradmin\miniconda3\Library\include;%INCLUDE%"
          cmake -G Ninja -B . -LAH ^
           -DCMAKE_INSTALL_PREFIX="C:/Users/runneradmin/miniconda3/Library" ^
           -DCMAKE_PREFIX_PATH="C:/Users/runneradmin/miniconda3/Library" ^
           -DCMAKE_CXX_FLAGS="/DWIN32 /D_WINDOWS /W3 /GR /EHsc" ^
           -DBUILD_SHARED_LIBS=OFF ^
           -DPython_FIND_STRATEGY=LOCATION -DPython_ROOT_DIR="C:/Users/runneradmin/miniconda3" || exit 1
          cmake --build . --target install --parallel 4 || exit 1
          ctest --output-on-failure || exit 1

